<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="p.minn.privilege.repository.UserDao">

	<select id="getTotal" resultType="java.lang.Integer">
		select count(*) from user where type in(0,1)
		<if test="page.qtype!=null and page.qtype!=''"> and ${page.qtype} like '${page.query}%'</if>
	</select>

	<select id="query" resultType="java.util.HashMap">
		select id,name,type,logintype,active, (select max(name_${lang}
		) from
		dictionary where mkey='ACCOUNTTYPE' and val=type) as
		type_name,(select
		max(name_${lang}
		) from dictionary where mkey='LOGINTYPE' and
		val=logintype) as
		logintype_name,(select max(name_${lang}
		) from
		dictionary where mkey='ACTIVETYPE' and val=active) as
		active_name
		from
		user where type in(0,1)
		<if test="page.qtype!=null and page.qtype!=''"> and ${page.qtype} like '${page.query}%'</if>
		limit ${page.startR},${page.endR}
	</select>


	<select id="getUserRole" resultType="java.util.HashMap">
		select r.id,r.name_${lang}
		text,'#' as parent
		<if test="userid!=null and userid!=''"> ,case when ur.role_id is null then 0 else 1 end as flag
		</if>
		from role r
		<if test="userid!=null and userid!=''"> left join (select * from user_role where
			user_id=${userid} ) ur on r.id=ur.role_id
		</if>
	</select>
	<select id="getUserRoleList" resultType="java.util.List">
		select r.code
		<if test="userid!=null and userid!=''"> ,case when ur.role_id is null then 0 else 1 end as flag
		</if>
		from role r
		<if test="userid!=null and userid!=''"> left join (select * from user_role where
			user_id=${userid} ) ur on r.id=ur.role_id
		</if>
	</select>
	
	<select id="getUserRoleRealmList" parameterType="int" resultType="java.lang.String">
		select code from role 
		<if test="userid!=null and userid!=''"> where id in (select role_id from user_role where user_id=${userid} )
		</if>
	</select>


	<select id="checkUser" resultType="User">
		select * from user where
		active=1
		and name=#{name} and pwd=#{pwd}
	</select>
	
	<select id="findByLoginName" resultType="User">
		select * from user where
		active=1
		and name=#{loginName} 
	</select>

	<insert id="save" parameterType="User" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO user (name, pwd, type,logintype,active)
		VALUES
		(#{name}, #{pwd}, #{type},#{loginType},#{active})
	</insert>

	<update id="update" parameterType="User">
		UPDATE user SET
		pwd = #{pwd},
		name=#{name},
		type=#{type},
		logintype=#{loginType},
		active=#{active}
		WHERE id = #{id}
	</update>

	<insert id="saveUserRole">
		insert into user_role(user_id,role_id) values
		<foreach collection="userRoles" item="userRole" index="index"
			open="(" separator="),(" close=")">
			${userRole.userId},${userRole.roleId}
		</foreach>

	</insert>


	<delete id="delete">
		delete from user where id=${id}
	</delete>


	<delete id="delUserRole">
		delete from user_role where
		user_id=${userid}
	</delete>

</mapper>